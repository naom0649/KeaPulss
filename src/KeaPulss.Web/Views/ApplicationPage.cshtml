@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.ApplicationPage>
@using ContentModels = KeaPulss.Models;
@{
    Layout = "_Layout";
}

<link rel="stylesheet" href="~/Assets/ApplicationPage.css" type="text/css" />
<!DOCTYPE html>
<html>
<head>
    <link rel="stylesheet" href="~/Assets/ApplicationPage.css" type="text/css" />
</head>
<body>
    <div id="heroSection" style="max-height: 300px; overflow: hidden; background-color: #@Model.Backgroundcolor; text-align: left; position: relative;">

        <!-- Hero Overlay for Text -->
        <div class="hero-overlay"></div>

        <!-- Hero Content -->
        <div class="hero-content">
            <div id="heroTitle">@Model.Title</div>
            <p>@Model.Description</p>
        </div>
    </div>
    

    <!-- Visning af ansøgninger fra databasen -->
    <div id="applicationsList">
        <h2>Ansøgninger:</h2>
        <div id="applicationsContainer"></div>
    </div>

    <!-- Modal Popup -->
    <div id="applicationModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal()">&times;</span>
            <div id="modalContent"></div>
        </div>
    </div>


<script>
    function deleteApplication(id) {
        // Send delete-anmodning til din API
        fetch(`/api/applications/${id}`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            }
        })
            .then(response => {
                if (response.ok) {
                    alert('Ansøgning slettet successfully.');
                    // Opdater DOM'en for at fjerne den slettede ansøgning
                    updateApplicationsList();
                } else {
                    alert('Fejl ved sletning af ansøgning.');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Fejl ved sletning af ansøgning.');
            });
    }

    // Opdater DOM'en ved at hente ansøgningerne igen fra API'en
    function updateApplicationsList() {
        fetch('/api/applications')
            .then(response => response.json())
            .then(applications => {
                // Opdater DOM'en med de nye ansøgninger
                displayApplications(applications);
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Fejl ved opdatering af ansøgningsliste.');
            });
    }

    // Function to open the modal with application details
    function openModal(application) {
        var modalContent = document.getElementById('modalContent');
        modalContent.innerHTML = `
            <strong>Navn:</strong> ${application.stu_name} <br>
            <strong>Email:</strong> ${application.mail} <br>
            <strong>Stilling:</strong> ${application.position} <br>
            <strong>Om dig:</strong> ${application.about} <br>
            <strong>Årsag:</strong> ${application.reason}
        `;

        var modal = document.getElementById('applicationModal');
        modal.style.display = 'block';
    }

    // Function to close the modal
    function closeModal() {
        var modal = document.getElementById('applicationModal');
        modal.style.display = 'none';
    }

        <!--Inside the displayApplications function -->
            function displayApplications(applications) {
                var applicationsContainer = document.getElementById('applicationsContainer');
                applicationsContainer.innerHTML = ''; // Clear the container

                if (applications && applications.length > 0) {
                    applications.forEach(application => {
                        var applicationBox = document.createElement('div');
                        applicationBox.className = 'applicationBox';

                        // Display name and position in the box
                        var boxContent = `
                        <div class="applicantInfo">
                            <strong>Navn:</strong> ${application.stu_name} <br>
                            <strong>Stilling:</strong> ${application.position} <br>
                        </div>
                    `;

                        // Display "Read More" link
                        var readMoreLink = document.createElement('a');
                        readMoreLink.href = '#';
                        readMoreLink.textContent = 'Read More';
                        readMoreLink.className = 'readMoreButton';
                        readMoreLink.onclick = function () {
                            openModal(application);
                        };

                        // Display delete button
                        var deleteButton = document.createElement('button');
                        deleteButton.textContent = 'Slet';
                        deleteButton.className = 'deleteButton';
                        deleteButton.onclick = function () {
                            deleteApplication(application.id);
                        };

                        // Append content to the application box
                        applicationBox.innerHTML = boxContent;
                        applicationBox.appendChild(readMoreLink);
                        applicationBox.appendChild(deleteButton);

                        applicationsContainer.appendChild(applicationBox);
                    });
                }
            }


    // Opdater ansøgningslisten ved indlæsning af siden
    window.onload = function () {
        updateApplicationsList();
    };
    </script>
</body>
</html>