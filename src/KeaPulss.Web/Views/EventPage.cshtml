@using KeaPulss.Core.Services
@using KeaPulss.Core.Services.Interfaces
@using Umbraco.Cms.Web.Common.PublishedModels
@using Umbraco.Cms.Core.Models.Blocks
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.EventPage>
@using ContentModels = KeaPulss.Models;
@inject IEventService eventService;


@{
    Layout = "_Layout";

    var getAllEvents = eventService.GetAll();
}
<link rel="stylesheet" href="~/Assets/EventPage.css" type="text/css" />

<div id="heroSection" style="max-height: 300px; overflow: hidden; background-color: #CF072B; text-align: left; position: relative;"> 
    <div id="heroTitle" style="font-size: 48px; padding: 40px 20px 0 20px;">@Model.Title</div>
</div>
    <section>
    @if (Model.EventPicker != null)
    {
        <img class="overlay-image" src="@Model.EventPicker.Url()" alt="Event Image">
    }
    else
    {
        @* Fallback image *@
        <svg class="max-w-[116px] max-h-[58px] ">
            <use class="" xlink:href="/assets/spritemap.svg#logo-primary" />
        </svg>
    }








<main class="article-container" style="position: relative; z-index: 2;">
    <article class="fixed-article">
        <p class="article-meta"> </p>

        <div class="article-content">
            <p id="eventTitle">@Model.EventTitle</p>
            <p id="description"> @Model.EventDescription </p>

            <div class="side-by-side">
                <div id="eventImage">
                    @if (Model.EventImage != null)
                    {
                        <img src="@Model.EventImage.Url()">
                    }
                    else
                    {
                        @* Fallback footer logo *@
                        <svg class="max-w-[116px] max-h-[58px] ">
                            <use class="" xlink:href="/assets/spritemap.svg#logo-primary" />
                        </svg>
                    }
                </div>

                <div id="textBoksColor">
                    <p id="textBoks"> @Model.TextBoks </p>
                </div>
            </div>

            <p id="eventRichtext">@Model.EventRichtext</p>
        </div>
    </article>
</main>
</section>

@* <!--
<section data-item="campaign-grid" class="group bg-silver-30">
    @if (getAllEvents != null && getAllEvents.Any())
    {
        <div class="grid grid-cols-12" data-type="default">
            <div class="col-span-full gap-30 h-full" data-type="item">
                <section class="container">
                    <div class="text-gray flex flex-col gap-32">
                        <div class="flex justify-between">
                           
                        </div>
                        <ul class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 auto-rows-fr gap-x-40 gap-y-24">
                            @foreach (var eventItem in getAllEvents)
                            {
                                <li class="col-span-1" key="@eventItem.Id">
                                    <h3>@eventItem.EventTitle</h3>
                                    <p>@eventItem.EventDescription</p>
                                    <div style="background-color: @eventItem.Backgroundcolor;">
                                        <!-- Tilføj yderligere styling eller indhold efter behov 
                                    </div>
                                    
                                    <div>

                                        @await Html.GetBlockGridHtmlAsync(Model, "EventGrid") <!-- Antager, at dette er en blok-grid; du skal muligvis løbe igennem dens elementer 
                                    </div>
                                </li>
                            }
                        </ul>
                    </div>
                </section>
            </div>
        </div>
    }
    else
    {
        <p>Ingen relaterede begivenheder tilgængelige.</p>
    }
            -->
   
</section> *@



